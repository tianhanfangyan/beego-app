{
    "swagger": "2.0",
    "info": {
        "title": "beego app API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "contact": {
            "email": "dystargate@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/student/": {
            "get": {
                "tags": [
                    "student"
                ],
                "description": "get all Student",
                "operationId": "StudentController.GetAll",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "student"
                ],
                "description": "create users",
                "operationId": "StudentController.CreateStudent",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} models.Student.Id"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/student/{uid}": {
            "get": {
                "tags": [
                    "student"
                ],
                "description": "get student by uid",
                "operationId": "StudentController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uid",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    },
                    "403": {
                        "description": ":uid is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "student"
                ],
                "description": "update the student",
                "operationId": "StudentController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uid",
                        "description": "The uid you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    },
                    "403": {
                        "description": ":uid is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "student"
                ],
                "description": "delete the student",
                "operationId": "StudentController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uid",
                        "description": "The uid you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "uid is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Student": {
            "title": "Student",
            "type": "object",
            "properties": {
                "Age": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Sex": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "student",
            "description": "Operations about Student\n"
        }
    ]
}